- name: Check get.k3s.io accessibility
  uri:
    url: https://get.k3s.io
  retries: 3
  delay: 5
  register: get_k3s_ready
  until: get_k3s_ready.status == 200

- name: Env used for k3s deployment
  debug:
    msg: "{{ env }}"

- name: Install K3s
  shell: "curl -vsfL https://get.k3s.io | sh -s -"
  environment: "{{ env }}"
  become: true

- name: Wait for K3s
  shell: "kubectl get node | grep '^{{ os.hostname }}[[:space:]]*Ready'"
  retries: 60
  delay: 2
  register: k3s_ready
  until: k3s_ready.rc == 0
  become: true

- name: Create CNI dirs
  file:
    path: /opt/cni/bin
    state: directory
  become: true

- name: Unpack CNI
  unarchive:
    src: "{{ k3s.cni_url }}"
    dest: /opt/cni/bin/
    remote_src: yes
  become: true

- name: Create CNI symlinks
  file:
    src: "/opt/cni/bin/{{ item }}"
    dest: "/var/lib/rancher/k3s/data/cni/{{ item }}"
    state: link
  with_items: ["dhcp", "macvlan"]
  become: true

- name: Manage services
  vars:
    create: "{{ k3s.service.create }}"
  include_tasks: tasks/manage_services.yaml

- name: Deploy multus CNI
  vars:
    create:
      custom-multus-cni-manifest:
        dst: /var/lib/rancher/k3s/server/manifests/multus-daemonset.yaml
        src: "../templates/multus-daemonset.yaml"
        permission: "0644"
  include_tasks: tasks/custom_files.yaml
