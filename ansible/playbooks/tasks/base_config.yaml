- name: Set timezone
  timezone:
    name: "{{ timezone }}"
  become: true

- name: Set hostname
  hostname:
    name: "{{ hostname }}"
  become: true

- name: Get orchestrator time
  set_fact:
    orch_date: "{{ ansible_date_time }}"
  delegate_to: localhost
  delegate_facts: true

- name: Sync time
  service:
    name: systemd-timesyncd
    enabled: false
    masked: false
    state: started
  become: true
  when: ((hostvars['localhost'].orch_date.epoch|int - ansible_date_time.epoch|int) | abs) > 5

- name: Update /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: ".*{{ item }}$"
    line: "{{ hostvars[item]['ansible_' + hostvars[item].os.primary_interface].ipv4.address }} {{ hostvars[item].os.hostname }}"
    state: present
  with_items: "{{ groups['all'] }}"
  become: true

- name: Remove swap from fstab
  mount:
    src: "{{ swap_file }}"
    state: absent
    path: none
  become: true
  register: disable_swap

- name: Disable swap
  command: swapoff -a
  when: disable_swap.changed
  become: true

- name: Remove swap file
  file:
    path: "{{ swap_file }}"
    state: absent
  become: true

- name: Find root disk
  set_fact:
    root_disk: "{{ ansible_facts['mounts'] | selectattr('mount', 'equalto', '/') | first }}"

- name: Set noatime for /
  mount:
    path: /
    opts: defaults,noatime
    src: "/dev/disk/by-uuid/{{ root_disk.uuid }}"
    fstype: "{{ root_disk.fstype }}"
    passno: 1
    state: mounted
  become: true

- name: Add fstrim cron
  cron:
    name: fstrim
    minute: "0"
    hour: "18"
    weekday: "3"
    job: "/usr/sbin/fstrim -a"
  become: true

- name: Set ssh keys
  authorized_key:
    user: "{{ item.user }}"
    key: "{{ item.key }}"
  with_items: "{{ ssh_keys }}"
  become: true

- name: sshd configure
  vars:
    create:
      custom-sshd-config:
        dst: /etc/ssh/sshd_config
        src: "../templates/sshd_config"
        permission: "0644"
        notify: sshd
  include_tasks: custom_files.yaml

- name: Set sysctl
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
  become: true
  with_dict: "{{ sysctl }}"

- name: Create custom avahi-daemon.conf file
  vars:
    create:
      custom-avahi-daemon:
        dst: /etc/avahi/avahi-daemon.conf
        src: "../templates/avahi-daemon.conf"
        permission: "0644"
        notify: avahi-daemon
  include_tasks: tasks/custom_files.yaml

- name: Enforce performance cpu governor
  copy:
    dest: /etc/default/cpufrequtils
    content: |
      GOVERNOR="performance"
  become: true

- block:
  - name: Set GRUB_CMDLINE_LINUX_DEFAULT
    lineinfile:
      state: present
      dest: /etc/default/grub
      regexp: '^GRUB_CMDLINE_LINUX_DEFAULT='
      line: GRUB_CMDLINE_LINUX_DEFAULT="cpufreq.default_governor=performance ignore_loglevel"
    become: true
    register: grub_config
  - name: Set ignore_loglevel
    shell: echo 1 > /sys/module/printk/parameters/ignore_loglevel
    become: true
  when:
    - debug is defined
    - debug == 'true'

- block:
  - name: Set GRUB_CMDLINE_LINUX_DEFAULT
    lineinfile:
      state: present
      dest: /etc/default/grub
      regexp: '^GRUB_CMDLINE_LINUX_DEFAULT='
      line: GRUB_CMDLINE_LINUX_DEFAULT="cpufreq.default_governor=performance"
    become: true
    register: grub_config
  - name: Unset ignore_loglevel
    shell: echo 0 > /sys/module/printk/parameters/ignore_loglevel
    become: true
  when:
    - (debug is defined and debug == 'false') or (debug is not defined)

- name: Update grub config
  command: update-grub
  when: grub_config.changed
  become: true
