---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: prometheus
  namespace: kube-system
spec:
  chart: prometheus
  repo: https://prometheus-community.github.io/helm-charts
  version: {{ manifest.versions.prometheus.chart }}
  targetNamespace: home-infra
  valuesContent: |-
    configmapReload:
      alertmanager:
        resources:
          requests:
            memory: 16Mi
            cpu: 50m
          limits:
            memory: 32Mi
            cpu: 50m
      prometheus:
        resources:
          requests:
            memory: 16Mi
            cpu: 50m
          limits:
            memory: 32Mi
            cpu: 50m
    extraEnv:
      TZ: {{ global.timezone }}
    alertmanager:
      resources:
        requests:
          memory: 32Mi
          cpu: 30m
        limits:
          memory: 64Mi
          cpu: 50m
      baseURL: https://alertmanager.{{ global.domain }}
      podLabels:
        app.kubernetes.io/name: alertmanager
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - prometheus
                topologyKey: kubernetes.io/hostname
      strategy:
        type: Recreate
      enabled: true
      persistentVolume:
        storageClass: longhorn-standard
    alertmanagerFiles:
      alertmanager.yml:
        global: {}
        receivers:
          {{ manifest.alertmanager.receivers | to_nice_yaml | indent(10, false) }}
        route:
          group_wait: 10s
          group_interval: 5m
          group_by:
            - service
          receiver: default-receiver
          repeat_interval: 6h
        inhibit_rules:
          {{ manifest.alertmanager.inhibit_rules | to_nice_yaml | indent(10, false) }}
    pushgateway:
      enabled: false
    kubeStateMetrics:
      enabled: true
      resources:
        requests:
          memory: 32Mi
          cpu: 100m
        limits:
          memory: 64Mi
          cpu: 200m
    nodeExporter:
      enabled: true
      resources:
        requests:
          memory: 32Mi
          cpu: 300m
        limits:
          memory: 64Mi
          cpu: 500m
    server:
      resources:
        requests:
          memory: 2Gi
          cpu: 500m
        limits:
          memory: 3Gi
          cpu: 700m
      global:
        external_labels:
          cluster: k3s
      baseURL: https://prometheus.{{ global.domain }}
      podLabels:
        app.kubernetes.io/name: prometheus
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - alertmanager
                topologyKey: kubernetes.io/hostname
      strategy:
        type: Recreate
      enabled: true
      persistentVolume:
        storageClass: longhorn-standard
    extraScrapeConfigs: |
      {{ manifest.prometheus.extrascrape | to_nice_yaml | indent(6, false) }}
    serverFiles: 
      {{ manifest.prometheus.serverfiles | to_nice_yaml | indent(6, false) }}

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: prometheus
  namespace: home-infra
spec:
  entryPoints:
  - websecure
  routes:
  - match: Host(`prometheus.{{ global.domain }}`)
    kind: Rule
    services:
      - name: prometheus-server
        port: 80
        namespace: home-infra
    middlewares:
      - name: basic-auth
        namespace: traefik-system
  tls:
    secretName: "{{ global.domain | replace('.', '-') }}-tls"

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: alertmanager
  namespace: home-infra
spec:
  entryPoints:
  - websecure
  routes:
  - match: Host(`alertmanager.{{ global.domain }}`)
    kind: Rule
    services:
      - name: prometheus-alertmanager
        port: 80
        namespace: home-infra
    middlewares:
      - name: basic-auth
        namespace: traefik-system
  tls:
    secretName: "{{ global.domain | replace('.', '-') }}-tls"
