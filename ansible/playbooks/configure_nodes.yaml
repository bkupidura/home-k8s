---
- name: Generate SSH keys for nodes
  hosts:
    - k8s_master_primary
  gather_facts: true
  tasks:
    - name: Generate SSH key
      openssh_keypair:
        path: /root/.ssh/id_rsa
      become: true
    - name: Cat SSH pub key
      command: cat /root/.ssh/id_rsa.pub
      register: cat_ssh_pub
      become: true
    - name: Set SSH pubkey fact
      set_fact:
        ansible_global_ssh_key: "{{ {'user': 'root', 'key': cat_ssh_pub.stdout} }}"
      delegate_facts: true
      delegate_to: "{{ item }}"
      with_items: "{{ groups['all'] }}"

- name: Configure k8s master
  hosts:
    - k8s_master_primary
    - k8s_master
  gather_facts: true
  tasks:
    - name: Configure networking
      vars:
        primary_interface: "{{ os.primary_interface }}"
        primary_mac: "{{ os.primary_mac | default(false) }}"
        dns_servers: "{{ global.dns.servers }}"
        vlans: "{{ os.vlans | default(false) }}"
      include_tasks: tasks/configure_networking.yaml

- name: Configure k8s master
  hosts:
    - k8s_master_primary
    - k8s_master
  gather_facts: true
  tasks:
    - name: Manage packages
      vars:
        install: "{{ package.install | default([]) }}"
        remove: "{{ package.remove | default([]) }}"
      include_tasks: tasks/manage_packages.yaml

    - name: Base config
      vars:
        timezone: "{{ global.timezone }}"
        hostname: "{{ os.hostname }}"
        swap_file: "{{ os.swap_file }}"
        ssh_keys: "{{ os.ssh_keys + [ ansible_global_ssh_key ] }}"
        cpu_governor: "{{ os.cpu_governor }}"
      include_tasks: tasks/base_config.yaml

    - name: Mount additional disks
      vars:
        additional_mounts: "{{ os.additional_mounts | default([]) }}"
      include_tasks: tasks/additional_mounts.yaml

    - name: Manage services
      vars:
        disable: "{{ service.disable | default([]) }}"
        enable: "{{ service.enable | default([]) }}"
        create: "{{ service.create | default({}) }}"
      include_tasks: tasks/manage_services.yaml

    - name: Enable netconsole
      include_tasks: tasks/configure_netconsole.yaml

    - name: Post deployment
      include_tasks: tasks/post_deployment.yaml

- name: Upgrade k8s master
  hosts:
    - k8s_master_primary
    - k8s_master
  gather_facts: true
  serial: 1
  tasks:
    - block:
      - stat:
          path: "/var/run/reboot-required"
        register: reboot_required
      - debug:
          msg: "reboot required"
        when: reboot_required.stat.exists

    - block:
      - name: Upgrade
        vars:
          upgrade: true
        include_tasks: tasks/manage_packages.yaml

      - name: Reboot
        reboot:
          post_reboot_delay: 300
          reboot_timeout: 600
        when: reboot_required.stat.exists
        become: true
      when:
        - operation is defined
        - operation == 'upgrade'
      any_errors_fatal: true
