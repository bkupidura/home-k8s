---
apiVersion: v1
kind: Service
metadata:
  name: waf
  namespace: home-infra
  labels:
    app.kubernetes.io/name: waf
spec:
  type: LoadBalancer
  publishNotReadyAddresses: false
  loadBalancerIP: "{{ global.vips[7].ip }}"
  externalTrafficPolicy: Local
  ports:
    - name: https
      port: 443
      protocol: TCP
  selector:
    app.kubernetes.io/name: waf

---
apiVersion: v1
data:
  waf.conf: |
{% for server_name, server_data in manifest.waf.server.items() %}
    server {
        listen 443 ssl;
        server_name {{ server_name }}.{{ global.domain }};

        set $upstream https://{{ global.vips[2].ip }};

        ssl_certificate /ssl/server.crt;
        ssl_certificate_key /ssl/server.key;
        ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1.2;
        ssl_verify_client off;

{% if server_data.rules is defined %}
        modsecurity_rules '
        {{ server_data.rules | indent(8, False) }}
        ';
{% endif %}

        location / {
            client_max_body_size 0;

            proxy_set_header Host $host;
            proxy_set_header Proxy "";
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_connect_timeout 5s;
            proxy_read_timeout 15s;
            proxy_redirect off;

            proxy_pass_header Authorization;
            proxy_pass $upstream;
        }
    }
{% endfor %}

kind: ConfigMap
metadata:
  name: waf-nginx
  namespace: home-infra

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: waf
  namespace: home-infra
  labels:
    app.kubernetes.io/name: waf
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: waf
  template:
    metadata:
      labels:
        app.kubernetes.io/name: waf
    spec:
      containers:
        - name: modsecurity-crs
          image: {{ manifest.versions.waf.repository }}:{{ manifest.versions.waf.tag }}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          resources:
            requests:
              memory: 64Mi
              cpu: 50m
            limits:
              memory: 64Mi
              cpu: 50m
          volumeMounts:
            - name: ssl
              mountPath: /ssl
            - mountPath: /nginx/conf.d
              name: waf-nginx
          env:
            - name: TZ
              value: Europe/Warsaw
            - name: PARANOIA
              value: "{{ manifest.waf.levels.paranoia }}"
            - name: ANOMALY_INBOUND
              value: "{{ manifest.waf.levels.anomaly_inbound }}"
            - name: ANOMALY_OUTBOUND
              value: "{{ manifest.waf.levels.anomaly_outbound }}"
            - name: ALLOWED_METHODS
              value: "GET HEAD POST OPTIONS DELETE"
      terminationGracePeriodSeconds: 3
      volumes:
        - name: ssl
          secret:
            secretName: {{ global.domain | replace('.', '-') }}-tls
            items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
        - name: waf-nginx
          configMap:
            name: waf-nginx
