---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: prometheus
  namespace: kube-system
spec:
  chart: prometheus
  repo: https://prometheus-community.github.io/helm-charts
  version: {{ versions.prometheus.chart }}
  targetNamespace: home-infra
  valuesContent: |-
    configmapReload:
      alertmanager:
        resources:
          requests:
            memory: 16Mi
          limits:
            memory: 32Mi
      prometheus:
        resources:
          requests:
            memory: 16Mi
          limits:
            memory: 32Mi
    extraEnv:
      TZ: {{ global.timezone }}
    alertmanager:
      resources:
        requests:
          memory: 32Mi
        limits:
          memory: 64Mi
      baseURL: https://alertmanager.{{ global.domain }}
      podLabels:
        app.kubernetes.io/name: alertmanager
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - prometheus
                topologyKey: kubernetes.io/hostname
      strategy:
        type: Recreate
      enabled: true
      persistentVolume:
        existingClaim: alertmanager
    alertmanagerFiles:
      alertmanager.yml:
        global: {}
        receivers:
          {{ manifest.alertmanager.receivers | to_nice_yaml | indent(10, false) }}
        route:
          group_wait: 10s
          group_interval: 5m
          group_by:
            - service
          receiver: default-receiver
          repeat_interval: 24h
        inhibit_rules:
          {{ manifest.alertmanager.inhibit_rules | to_nice_yaml | indent(10, false) }}
    pushgateway:
      enabled: false
    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      resources:
        requests:
          memory: 64Mi
        limits:
          memory: 96Mi
    nodeExporter:
      enabled: true
      resources:
        requests:
          memory: 32Mi
        limits:
          memory: 64Mi
    server:
      resources:
        requests:
          memory: 2Gi
        limits:
          memory: 2Gi
      global:
        external_labels:
          cluster: k3s
      baseURL: https://prometheus.{{ global.domain }}
      podLabels:
        app.kubernetes.io/name: prometheus
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - alertmanager
                topologyKey: kubernetes.io/hostname
      strategy:
        type: Recreate
      enabled: true
      persistentVolume:
        existingClaim: prometheus-server
    extraScrapeConfigs: |
      {{ manifest.prometheus.extrascrape | to_nice_yaml | indent(6, false) }}
    serverFiles:
      alerting_rules.yml:
        groups:
{% for group in alerts %}
{% if group.enabled is not defined or group.enabled %}
          - {{ group | to_nice_yaml | indent(12, false) }}
{% endif %}
{% endfor %}
