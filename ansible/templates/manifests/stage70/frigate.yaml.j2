---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: frigate
  namespace: smart-home
spec:
  accessModes:
  - {{ global.k8s.storage.class.default.mode }}
  resources:
    requests:
      storage: {{ manifest.frigate.volume.size }}
  storageClassName: {{ global.k8s.storage.class.default.name }}

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: frigate
  namespace: smart-home
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`frigate.{{ global.domain }}`)
    kind: Rule
    services:
      - name: frigate
        port: 5000
    middlewares:
      - name: lan-whitelist
        namespace: traefik-system
      - name: x-forwarded-proto-https
        namespace: traefik-system
      - name: auth-authelia
        namespace: traefik-system
  tls:
    secretName: "{{ global.domain | replace('.', '-') }}-tls"

---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: frigate
  namespace: kube-system
spec:
  chart: frigate
  repo: https://k8s-at-home.com/charts/
  version: {{ versions.frigate.chart }}
  targetNamespace: smart-home
  valuesContent: |-
    resources:
      requests:
        memory: 256Mi
        cpu: 500m
      limits:
        memory: 512Mi
        cpu: 1000m
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - recorder
            topologyKey: kubernetes.io/hostname
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
              - key: video_processing
                operator: In
                values:
                  - "true"
    replicaCount: 1
    strategyType: Recreate
    env:
      TZ: {{ global.timezone }}
    image:
      repository: {{ versions.frigate.image.repository }}
      tag: {{ versions.frigate.image.tag }}
    service:
      main:
        ports:
          http:
            port: 5000
            enabled: true
          rtmp:
            enabled: true
    ingress:
      main:
        enabled: false
    securityContext:
      privileged: true
    persistence:
      media:
        enabled: true
        existingClaim: frigate
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/dri/renderD128
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 500Mi
        mountPath: /dev/shm
    configmap:
      config:
        enabled: true
        data:
          config.yml: |
            mqtt:
              host: mqtt.smart-home
              port: 1883
              topic_prefix: frigate
              client_id: frigate
              user: frigate
              password: "{{ manifest.frigate.mqtt.password }}"
              stats_interval: 60
            ffmpeg:
              hwaccel_args:
                - -hwaccel
                - vaapi
                - -hwaccel_device
                - /dev/dri/renderD128
                - -hwaccel_output_format
                - yuv420p
            cameras:
{% for key, value in manifest.frigate.cameras.items() %}
              {{ key }}:
                {{ value | to_nice_yaml | indent(16, false) }}
{% endfor %}
            objects:
              track:
                - person
                - cat
              filters:
                person:
                  min_score: 0.7
                  threshold: 0.75
                cat:
                  min_score: 0.6
                  threshold: 0.7
            detect:
              max_disappeared: 60
            record:
              enabled: false
            detectors:
              cpu1:
                type: cpu
