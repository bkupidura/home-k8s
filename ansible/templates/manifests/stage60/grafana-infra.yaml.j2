---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grafana
  namespace: home-infra
spec:
  entryPoints:
  - websecure
  routes:
  - match: Host(`grafana.{{ global.domain }}`)
    kind: Rule
    services:
      - name: grafana
        port: 80
        namespace: home-infra
    middlewares:
      - name: lan-whitelist
        namespace: traefik-system
  tls:
    secretName: "{{ global.domain | replace('.', '-') }}-tls"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana
  namespace: home-infra
spec:
  accessModes:
  - {{ global.k8s.storage.class.default.mode }}
  resources:
    requests:
      storage: 1Gi
  storageClassName: {{ global.k8s.storage.class.default.name }}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: grafana-restic-restore
  namespace: home-infra
spec:
  concurrencyPolicy: Forbid
  schedule: "0 0 * * *"
  suspend: true
  jobTemplate:
    spec:
      template:
        spec:
          hostname: grafana
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: grafana
          containers:
          - name: restore
            image: {{ manifest.versions.restic.repository }}:{{ manifest.versions.restic.tag }}
            args:
            - "--repo"
            - "{{ manifest.backup.restic.repo }}"
            - "--verbose"
            - "restore"
            - "latest"
            - "--host"
            - "grafana"
            - "--target"
            - "/data"
            volumeMounts:
            - mountPath: "/data"
              name: data
            envFrom:
            - secretRef:
                name: restic-secrets
          restartPolicy: OnFailure

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: grafana-restic-backup
  namespace: home-infra
spec:
  concurrencyPolicy: Forbid
  schedule: "30 04 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          hostname: grafana
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: grafana
          containers:
          - name: backup
            image: {{ manifest.versions.restic.repository }}:{{ manifest.versions.restic.tag }}
            command:
            - "/bin/sh"
            - "-ec"
            - |
              cd /data
              restic --repo "{{ manifest.backup.restic.repo }}" --verbose backup .
            volumeMounts:
            - mountPath: "/data"
              name: data
            envFrom:
            - secretRef:
                name: restic-secrets
          restartPolicy: OnFailure
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values:
                          - grafana
                  topologyKey: kubernetes.io/hostname
