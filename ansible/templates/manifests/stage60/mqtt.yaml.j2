{%- if global.k8s.mqtt.service == 'mosquitto' -%}
{% for r in [0, 1] %}
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: mosquitto-{{ r }}
  namespace: kube-system
spec:
  repo: https://k8s-at-home.com/charts/
  chart: mosquitto
  version: {{ manifest.versions.mosquitto.chart }}
  targetNamespace: smart-home
  valuesContent: |-
    podSecurityContext:
      sysctls:
        - name: "net.ipv4.tcp_keepalive_intvl"
          value: "5"
        - name: "net.ipv4.tcp_keepalive_probes"
          value: "3"
        - name: "net.ipv4.tcp_keepalive_time"
          value: "30"
    resources:
      requests:
        memory: 32Mi
        cpu: 50m
      limits:
        memory: 32Mi
        cpu: 50m
    image:
      repository: {{ manifest.versions.mosquitto.image.repository }}
      tag: {{ manifest.versions.mosquitto.image.tag }}
    podAnnotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port: '9234'
    additionalContainers:
      prometheus-exporter:
        name: mosquitto-exporter
        image: {{ manifest.versions.mosquitto.exporter.repository }}:{{ manifest.versions.mosquitto.exporter.tag }}
        imagePullPolicy: IfNotPresent
        env:
          - name: MQTT_USER
            value: {{ manifest.mosquitto.exporter.username }}
          - name: MQTT_PASS
            value: {{ manifest.mosquitto.exporter.password }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - mosquitto
              topologyKey: kubernetes.io/hostname
    env:
      TZ: {{ global.timezone }}
    persistence:
      configinc:
        enabled: true
        type: custom
        volumeSpec:
          secret:
            secretName: mosquitto-{{ r }}
      data:
        enabled: false
    service:
      main:
        enabled: true
    auth:
      enabled: true
{% endfor %}
{%- endif %}
